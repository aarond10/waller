# Copyright (C) 2015 Yousong Zhou

ipset_setup() {
	ipset create setrst hash:ip timeout 3600
	ipset create setblocked hash:ip
	ipset create setnormal hash:ip
	ipset create setdev hash:ip
}

iptables_omysocks_redsocks() {
	# Create new chain
	iptables -t nat -F omysocks_redsocks 2>/dev/null
	iptables -t nat -N omysocks_redsocks 2>/dev/null

	# Ignore LANs and some other reserved addresses.
	# See http://en.wikipedia.org/wiki/Reserved_IP_addresses#Reserved_IPv4_addresses
	# and http://tools.ietf.org/html/rfc5735 for full list of reserved networks.
	iptables -t nat -A omysocks_redsocks -d 0.0.0.0/8 -j RETURN
	iptables -t nat -A omysocks_redsocks -d 10.0.0.0/8 -j RETURN
	iptables -t nat -A omysocks_redsocks -d 127.0.0.0/8 -j RETURN
	iptables -t nat -A omysocks_redsocks -d 169.254.0.0/16 -j RETURN
	iptables -t nat -A omysocks_redsocks -d 172.16.0.0/12 -j RETURN
	iptables -t nat -A omysocks_redsocks -d 192.168.0.0/16 -j RETURN
	iptables -t nat -A omysocks_redsocks -d 224.0.0.0/4 -j RETURN
	iptables -t nat -A omysocks_redsocks -d 240.0.0.0/4 -j RETURN

	# Anything else should be balanced to ...
	iptables -t nat -A omysocks_redsocks -p tcp -j REDIRECT --to-ports "$OMYSOCKS_PORTRANGE" --random
}

iptables_omysocks_go() {
	iptables -t nat -F omysocks_go 2>/dev/null
	iptables -t nat -N omysocks_go 2>/dev/null

	# some we never intend to go through omysocks_go
	iptables -t nat -A omysocks_go -m set --match-set setnormal dst -j RETURN
	iptables -t nat -A omysocks_go -m set --match-set setdev dst -j RETURN
	# some always
	iptables -t nat -A omysocks_go -m set --match-set setblocked dst -j omysocks_redsocks
	iptables -t nat -A omysocks_go -m set --match-set setrst dst -j omysocks_redsocks
	iptables -t nat -A omysocks_go -m recent --name recentrst --rcheck --rdest --seconds 3 --hitcount 3 -j SET --add-set setrst dst --exist
}

iptables_omysocks_teardown() {
	# this is where we may intervene with others
	iptables -t nat -D prerouting_lan_rule -p tcp -j omysocks_go
	iptables -t nat -D OUTPUT -p tcp -j omysocks_go
	iptables -t raw -D PREROUTING -p tcp -m tcp --tcp-flags RST RST -m recent --name recentrst --set --rsource
}

iptables_omysocks_setup() {
	iptables -t raw -I PREROUTING -p tcp -m tcp --tcp-flags RST RST -m recent --name recentrst --set --rsource

	iptables_omysocks_redsocks
	iptables_omysocks_go
	iptables -t nat -A prerouting_lan_rule -p tcp -j omysocks_go
	iptables -t nat -A OUTPUT -p tcp -j omysocks_go
}

if [ -z "$OMYSOCKS_PORTRANGE" ]; then
	OMYSOCKS_PORTRANGE=$(ubus call service get_data '{"type":"portrange"}' | jsonfilter -e '$["omysocks"]["redsocks"]["portrange"]')
fi
if [ "$OMYSOCKS_ACTION" = "teardown" -o -z "$OMYSOCKS_PORTRANGE" ]; then
	iptables_omysocks_teardown
else
	ipset_setup
	iptables_omysocks_teardown
	iptables_omysocks_setup
fi
